{"version":3,"sources":["components/Formulario.js","hooks/useForm.js","components/Cita.js","App.js","index.js"],"names":["Formulario","crearCita","initialState","useState","values","setValues","target","name","value","useForm","mascota","dueño","fecha","hora","sintomas","form","handleInputChange","reset","error","setError","counter","setCounter","className","onSubmit","e","preventDefault","length","id","type","placeholder","onChange","cols","rows","Cita","cita","eliminarCita","onClick","App","citasIniciales","JSON","parse","localStorage","getItem","console","log","citas","setCitas","useEffect","setItem","stringify","nuevasCitas","filter","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7ac20ee0.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { useForm } from \"../hooks/useForm\"\r\n\r\nexport const Formulario = ({ crearCita }) => {\r\n    \r\n    const [ form , handleInputChange, reset] = useForm({\r\n        mascota: '',\r\n        dueño: '',\r\n        fecha: '',\r\n        hora: '',\r\n        sintomas: ''\r\n    });\r\n    \r\n\r\n    const [error, setError] = useState(false);\r\n    const [counter, setCounter] = useState(0);\r\n\r\n    const { mascota, dueño, fecha, hora, sintomas } = form\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault()\r\n        \r\n        // Validar\r\n        if( mascota.length < 2 || dueño.length < 2 || fecha === '' || hora === '' ){\r\n            setError(true);\r\n            return;\r\n        }\r\n        setError(false)\r\n        \r\n        // Asignar un ID\r\n        form.id = counter;\r\n\r\n        // Crear la cita\r\n        crearCita(form)\r\n\r\n        reset();\r\n        setCounter( counter + 1 );\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>Crear Cita</h2>    \r\n\r\n            { error\r\n                ? <p className='alerta-error'>Todos los campos son obligatorios </p>\r\n                : null\r\n            }       \r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <label>Nombre Mascota</label>\r\n                <input \r\n                    type='text'\r\n                    name='mascota'\r\n                    className='u-full-width'\r\n                    placeholder='Nombre de la Mascota'\r\n                    value={mascota}\r\n                    onChange={handleInputChange}\r\n                />\r\n                \r\n                <label>Nombre Dueño</label>\r\n                <input \r\n                    type='text'\r\n                    name='dueño'\r\n                    className='u-full-width'\r\n                    placeholder='Nombre del Dueño'\r\n                    value={dueño}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <label>Fecha</label>\r\n                <input \r\n                    type='date'\r\n                    name='fecha'\r\n                    className='u-full-width'\r\n                    value={fecha}\r\n                    onChange={handleInputChange}\r\n                />\r\n                \r\n                <label>Hora</label>\r\n                <input \r\n                    type='time'\r\n                    name='hora'\r\n                    className='u-full-width'\r\n                    value={hora}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <label>Sintomas</label>\r\n                <textarea \r\n                    name=\"sintomas\" \r\n                    cols=\"30\" \r\n                    rows=\"10\"\r\n                    className='u-full-width'\r\n                    value={sintomas}\r\n                    onChange={handleInputChange}\r\n                ></textarea>\r\n\r\n                <button\r\n                    type='submit'\r\n                    className='u-full-width button-primary'\r\n                >\r\n                    AGREGAR CITA\r\n                </button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from 'react'\r\n\r\nexport const useForm = ( initialState = {}) => {\r\n    \r\n    const [values, setValues] = useState(initialState)\r\n\r\n    const reset = () => {\r\n\r\n        setValues(initialState)\r\n\r\n    }\r\n    \r\n    const handleInputChange = ({ target }) => {\r\n        \r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        })\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset]\r\n\r\n}\r\n","\r\nexport const Cita = ({ cita, eliminarCita }) => {\r\n    \r\n    const { mascota, dueño, fecha, hora, sintomas, id } = cita;\r\n\r\n    // const handleClick = ( id ) => {\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"cita\">\r\n\r\n                <p> Mascota: <span>{ mascota }</span> </p>\r\n                <p> Dueño: <span>{ dueño }</span> </p>\r\n                <p> Fecha: <span>{ fecha }</span> </p>\r\n                <p> Hora: <span>{ hora }</span> </p>\r\n                <p> Sintomas: <span>{ sintomas }</span> </p>\r\n\r\n                <button\r\n                    className = \"button eliminar u-full-width\"\r\n                    onClick={ () => eliminarCita( id ) }\r\n                >\r\n                    Eliminar &times;\r\n                </button>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { Formulario } from './components/Formulario'\r\nimport './App.css'\r\nimport { Cita } from './components/Cita';\r\n\r\nexport const App = () => {\r\n\r\n    const citasIniciales =  JSON.parse(localStorage.getItem('citas')) || [] ;\r\n    console.log(citasIniciales);\r\n\r\n    const [ citas, setCitas ] = useState(citasIniciales);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('citas', JSON.stringify(citas))\r\n    }, [citas])\r\n\r\n    const crearCita = (cita) => {\r\n        setCitas([\r\n            ...citas,\r\n            cita\r\n        ])\r\n    }\r\n\r\n    const eliminarCita = ( id ) => {\r\n        \r\n        const nuevasCitas = citas.filter( cita => cita.id !== id );\r\n        setCitas( nuevasCitas )\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Administrador de Pacientes</h1>\r\n\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"one-half column\">\r\n                        <Formulario \r\n                            crearCita = { crearCita }\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"one-half column\">\r\n                        {\r\n                            citas.length === 0 \r\n                            ? <h2> No hay citas </h2>\r\n                            : <h2> Administra tus citas </h2>\r\n                        }\r\n                        { citas.map( cita => (\r\n                            <Cita \r\n                                key={cita.id}\r\n                                cita={cita}\r\n                                eliminarCita={eliminarCita} \r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}